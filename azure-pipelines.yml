parameters:
  - name: Run_Stage
    displayName: Stage to Run
    type: string
    default: 'CI'
    values:
      - CI
      - Project1
      - Project2

  - name: location
    displayName: Location
    type: string
    default: 'UK South'
    values:
    - 'UK South'
    - 'UK West'

  - name: env
    displayName: Environment
    type: string
    default: 'SANDBOX'
    values:
    - SANDBOX
    - DEV
    - TEST
    - UAT
    - PROD

name: Infrastructure Deployment Pipeline - ${{ parameters.env }} ${{ parameters.Run_Stage }}
trigger:
  - workspace_publish

variables:
  - name: tfversion
    value: 0.13.4
  - name: project
    value: application
  - name: serviceConnection
stages:
  
  - stage: Project1
    displayName: 'Project1'
    pool: 
      vmImage: 'Ubuntu-latest'
    condition: or(contains('${{ parameters.Run_Stage }}', 'Project1'), contains('${{ parameters.Run_Stage }}', 'CI'))
    jobs:
      - job: Project1
        steps:

          - task: CmdLine@2
            displayName: 'Git rebase master'
            inputs:
              script: |
                git config  user.email "azuredevops@hmcts.net"
                git config  user.name "Azure devops"            
                git rebase origin/main
                ls -lRt
          - task: AzureSynapseWorkspace.synapsecicd-deploy.synapse-deploy.Synapse workspace deployment@1
            displayName: 'Synpase deployment task for workspace: mi-synapse-local'
            inputs:
              TemplateFile: '$(System.DefaultWorkingDirectory)/mi-synapse-local/TemplateForWorkspace.json'
              ParametersFile: '$(System.DefaultWorkingDirectory)/mi-synapse-local/TemplateParametersForWorkspace.json'
              azureSubscription: 'bamboox-beta (2a24ae5f-0dab-46e6-8f9d-6a2018623814)'
              ResourceGroupName: 'mi-local-rg'
              TargetWorkspaceName: 'mi-synapse-local'
          - task: CmdLine@2
            displayName: 'Prepare Az environment'
            inputs:
              script: 'pwsh --command Install-Module -Name Az.Accounts -RequiredVersion 2.1.2 -AllowClobber -Force'
          - task: UsePythonVersion@0
            displayName: 'Use Python 3.6'
            inputs:
              versionSpec: '3.6'

          - script: python -m pip install --upgrade pip setuptools wheel
            displayName: 'Install tools'
          - script: pip install -r requirements.txt
            displayName: 'Install requirements'
          - task: PythonScript@0
            inputs:
              scriptSource: 'inline'
              script: |
                make test
            env:
              AZ_SERVICE_PRINCIPAL_TENANT_ID: $(AZ_SERVICE_PRINCIPAL_TENANT_ID)
              AZ_SUBSCRIPTION_ID: 'bamboox-beta (2a24ae5f-0dab-46e6-8f9d-6a2018623814)'
              AZ_RESOURCE_GROUP_NAME: 'mi-local-rg'
              AZ_DATAFACTORY_NAME: mi-synapse-local
              # ${{ each pair in parameters.envMapping }}:
              #   ${{ pair.key }}: $(${{ pair.value }})
              # ${{ each pair in parameters.azureKeyMapping }}:
              #   ${{ pair.key }}: $(${{ pair.value }})
            displayName: 'Run integration tests'
          - task: PublishTestResults@2
            condition: succeededOrFailed()
            inputs:
              testResultsFormat: 'JUnit'
              testResultsFiles: '**/reports/test/*.xml'

          - task: PublishPipelineArtifact@1
            condition: succeededOrFailed()
            inputs:
              path: '$(System.DefaultWorkingDirectory)/reports/test/'
              artifact: 'test'
              displayName: 'Publish test report'

      # - template: pipeline-steps/integration-tests-job.yaml
      #   parameters:
      #     subscriptionEndpoint: 'bamboox-beta (2a24ae5f-0dab-46e6-8f9d-6a2018623814)'
      #     adfName: mi-synapse-local
          
      #     envMapping:
      #       - key: BUILD_VERSION
      #         value: Build.BuildId

